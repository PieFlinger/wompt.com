form(action='/accounts/' + w.account.name, method='POST')
	.title
		.left
			h3 Editing:	
		h2 #{w.account.name}
	.right
		button.minimal(type='submit') Save
		a.button.minimal(href='/accounts/' + w.account.name) Cancel
	table#account_info.vertical.top_aligned
		tr
			th
				label(for='name') Name
			td
				input#name(name='name', disabled, value=w.account.name)
		tr
			th
				label(for='domains') Allowed Domains
				.note one per line
			td
				textarea#domains(name='domains')= w.account.domains.join("\n")
		- if(w.account.hasFeature('sso'))
			tr
				th
					label(for='profile_url_template') User Profile URL template
				td
					input#profile_url_template(name='profile_url_template', value=w.account.profile_url_template)
					span.note &nbsp;Example:&nbsp;
						span.code http://example.com/users/[name]
					.note A Url template for users profile pages. [name] will be 
						| replaced by the user_name= query parameter of the
						| embedded iframe, [id] will be replaced by the user_id
						| query parameter.  Possible values are [name] and [id].
		- if(w.user.doc.is_admin())
			tr.admin
				th
					label(for='add_owner') Add Owner by ID:
				td
					input(type='text', id='add_owner', name='add_owner_id')
			tr.admin
				th.top_aligned
					label(for='role') Role
				td
					select#role(name='role')
						- for(var role in w.roles)
							option(value=role, selected=(role == w.account.role))= role
			tr.admin
				th.top_aligned
					| Features from
					br
					| '#{w.account.role}' role
				td
					#features.code(name='features')!= JSON.stringify(w.account.featureSet())
		th
			label(for='word_filter') Word filter
		td
			input#use_word_filter(type='checkbox', name='use_word_filter', value='true', checked=w.account.useWordFilter)
			label(for='use_word_filter') Use word filter
			.note each word or partial word that should appear filtered, separated by spaces.
			textarea#word_filter(name='word_filter')= w.account.wordFilter.join(" ");
